# Copy this to .env and fill in your values

# =============================================================================
# MQTT BROKER CONFIGURATION
# =============================================================================

# HiveMQ Cloud Broker (Recommended - these take precedence)
# Why use HiveMQ: Reliable cloud MQTT service with good free tier
# When to use: Development, prototyping, small-scale production
HIVEMQ_BROKER_URL=wss://your-hivemq-cluster.hivemq.cloud:8884/mqtt
HIVEMQ_USERNAME=your-hivemq-username
HIVEMQ_PASSWORD=your-hivemq-password

# Alternative MQTT Broker (fallback if HiveMQ not set)
# Why use alternatives: Cost optimization, on-premise requirements, specific features
# Examples: AWS IoT Core, Azure IoT Hub, self-hosted Mosquitto
MQTT_BROKER_URL=wss://your-broker-url:8884/mqtt
MQTT_USERNAME=your-username
MQTT_PASSWORD=your-password

# =============================================================================
# MQTT CONNECTION SETTINGS
# =============================================================================

# Client ID - Unique identifier for this connection
# Why important: Prevents connection conflicts, enables session tracking
# When to change: Multiple instances, different environments
MQTT_CLIENT_ID=mastra-iot-template

# Keep Alive Interval (seconds)
# Why important: Detects broken connections, maintains session
# 30-60s: Fast detection, more network traffic (mobile/unstable networks)
# 60-300s: Balanced (default for most applications)
# 300+s: Less traffic, slower detection (stable networks, battery devices)
MQTT_KEEP_ALIVE=60

# Connection Timeout (milliseconds)
# Why important: Prevents hanging on failed connections
# 10000-30000ms: Normal networks
# 30000-60000ms: Slow or unreliable networks
MQTT_CONNECT_TIMEOUT=30000

# Clean Session Flag
# Why important: Controls message persistence and session state
# true: Fresh start each time, no queued messages (real-time data)
# false: Resume session, receive missed messages (critical commands)
MQTT_CLEAN_SESSION=true

# =============================================================================
# AI & VOICE SERVICES
# =============================================================================

# OpenAI API Key (for Voice Response Feature)
# Why needed: Enables real TTS (Text-to-Speech) audio generation with personality
# Get from: https://platform.openai.com/api-keys
# Used by: iot-voice-response tool for generating witty audio responses
# Fallback: Uses mock audio data if not provided
OPENAI_API_KEY=your-openai-api-key-here

# =============================================================================
# MASTRA STORAGE CONFIGURATION
# =============================================================================

# Storage Type for Mastra Agent Memory
# Why important: Determines where agent memory and conversation data is stored
# memory: Fast, lost on restart (development, temporary conversations)
# file: Persistent, single machine (production with local storage)
DATA_STORE_TYPE=memory

# =============================================================================
# SYSTEM CONTROL
# =============================================================================

# Enable Scheduled Monitoring
# Why use: Automatically runs periodic IoT system health checks
# true: Enables scheduled monitoring tasks (production recommended)
# false: Manual monitoring only (development, testing)
# Tasks: Examples: Routine (30min), Connectivity (1h), Data Quality (2h), Daily Summary (8am)
ENABLE_SCHEDULING=false


# Auto-initialize System on Startup
# Why use: Automatically connect to MQTT and set up processors
# true: Hands-free startup (production)
# false: Manual initialization (development, testing)
# Note: Only used if running with AUTO_INIT=true (e.g., pnpm init)
AUTO_INIT=false